version: "3.9"

x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

networks:
  app-network:
services:
  # server:
  #   build: .
  #   image: docker.pkg.github.com/utain/go-12factor-example/go-server:latest
  #   environment:
  #     DATABASE_URL: postgresql://example:P@55w0rd@postgres:5432/example?sslmode=disable
  #     DATABASE_HOST: postgres
  #     DATABASE_PORT: 5432
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - postgres
  #   links:
  #     - postgres
  # postgres:
  #   image: postgres:13.2
  #   ports:
  #     - "5433:5432"
  #   environment:
  #     - POSTGRES_PASSWORD=P@55w0rd
  #     - POSTGRES_USER=example
  #     - POSTGRES_DB=example
  #   networks:
  #     - app-network

  # ********************
  # Telemetry Components
  # ********************
  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
      - "--prometheus.server-url"
      - "http://${PROMETHEUS_ADDR}"
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "8002:${JAEGER_SERVICE_PORT}"                    # Jaeger UI
      - "4317"                           # OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
    logging: *logging
    networks:
      - app-network

  # Grafana
  grafana:
    image: grafana/grafana:9.1.0
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 75M
    volumes:
      - ./src/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./src/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "8001:${GRAFANA_SERVICE_PORT}"
    logging: *logging
    networks:
      - app-network

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.70.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml", "--config=/etc/otelcol-config-extras.yml" ]
    volumes:
      - ./src/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
      - ./src/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "30800:4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      - jaeger
    logging: *logging
    networks:
      - app-network